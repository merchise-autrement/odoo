-
    Create a supplier.
-
    !record {model: res.partner, id: supplier_crossdock}:
        name: Crossdocking supplier
-
    Use the warehouse created in cancellation_propagated.yml.
-
    !python {model: stock.warehouse, id: wh_pps}: |
        assert self.crossdock_route_id.active, 'Crossdock route is not active'
-
  Next I create a new product supplier info
-
  !record {model: product.supplierinfo, id: product_supplierinfo}:
    delay: 1
    name: supplier_crossdock
    min_qty: 2.0
    qty: 10.0
    product_tmpl_id: product.product_product_18_product_template

-
    Create new product without any routes.
-
    !record {model: product.product, id: cross_shop_product}:
        name: PCE
        type: product
        categ_id: product.product_category_1
        list_price: 100.0
        standard_price: 70.0
        type: product
        uom_id: product.product_uom_unit
        uom_po_id: product.product_uom_unit
-
  Set supplierinfo on product
-
  !python {model: product.product}: |
    self.write(cr, uid, ref('cross_shop_product'), { 'seller_ids': [(6, 0, [ref('product_supplierinfo')])]}, context=context )

-
    Create a sales order with a line of 100 PCE incoming shipment, with route_id crossdock shipping.
-
    !record {model: sale.order, id: sale_order_crossdock_shpng}:
        partner_id: base.res_partner_4
        warehouse_id: wh_pps
        note: Create Sales order
        order_line:
            - product_id: cross_shop_product
              product_uom_qty: 100.00
-
    !python {model: sale.order.line}: |
        route_wh_pps_crossdock = self.pool.get('stock.warehouse').browse(cr, uid, ref('stock_dropshipping.wh_pps')).crossdock_route_id.id
        order = self.pool.get('sale.order').browse(cr, uid, ref('sale_order_crossdock_shpng'))
        line_ids = [x.id for x in order.order_line]
        self.write(cr, uid, line_ids, {'route_id': route_wh_pps_crossdock})
-
    Confirm sales order.
-
    !workflow {model: sale.order, action: order_confirm, ref: sale_order_crossdock_shpng}
-
    Run the scheduler.
-
    !python {model: procurement.order}: |
        self.run_scheduler(cr, uid)
-
    Check a quotation was created for the created supplier and confirm it.
-
    !python {model: purchase.order}: |
        po_id = self.search(cr, uid, [('partner_id', '=', ref('supplier_crossdock')), ('state','=','draft')])
        self.wkf_confirm_order(cr, uid, po_id)
